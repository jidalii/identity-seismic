import { Account, Chain, Client, Hex, Transport, TypedData } from 'viem';
import { SignTypedDataParameters } from 'viem/actions';
import { type TransactionSerializableSeismic } from './chain';
type PrimitiveSignature = {
    r: Hex;
    s: Hex;
    yParity: Hex;
};
export declare const signSeismicTxTypedData: <TTransport extends Transport, TChain extends Chain | undefined, TAccount extends Account, typedData extends TypedData | Record<string, unknown>, primaryType extends keyof typedData | "EIP712Domain">(client: Client<TTransport, TChain, TAccount>, tx: TransactionSerializableSeismic, signedCall?: boolean) => Promise<{
    typedData: SignTypedDataParameters<typedData, primaryType, TAccount>;
    signature: PrimitiveSignature;
}>;
export {};
//# sourceMappingURL=signSeismicTypedData.d.ts.map